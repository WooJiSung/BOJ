#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int N, M;

int insert(int *visited, int *queue, int *rear, int index, int cur)
{
	if (index >= 0 && index <= 100000 && N != index && visited[index] == 0)
	{
		queue[(*rear)++] = index;
		visited[index] = visited[cur] + 1;

		if (index == M)
		{
			printf("%d", visited[index]);
			return 1;
		}
	}
	return 0;
}

void BFS(int *visited, int A, int B)
{
	int queue[100001];
	int front = 0, rear = 0;
	queue[rear++] = N;

	while (front != rear)
	{
		int index = queue[front++];

		if (insert(visited, queue, &rear, index - 1, index))	return;
		if (insert(visited, queue, &rear, index + 1, index))	return;

		if (insert(visited, queue, &rear, index - A, index))	return;
		if (insert(visited, queue, &rear, index + A, index))	return;
		if (insert(visited, queue, &rear, index * A, index))	return;

		if (insert(visited, queue, &rear, index - B, index))	return;
		if (insert(visited, queue, &rear, index + B, index))	return;
		if (insert(visited, queue, &rear, index * B, index))	return;
	}
}

int main()
{
	int i, A, B, visited[100001];
	scanf("%d %d %d %d", &A, &B, &N, &M);

	for (i = 0; i <= 100000; i++)
		visited[i] = 0;

	BFS(visited, A, B);

	return 0;
}