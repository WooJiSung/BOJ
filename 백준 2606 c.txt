#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

typedef struct graph
{
	int *vertex;
	int *fresh;
	int **matrix;
}Graph;

void DFS(Graph *g, int v, int n, int *output)
{
	g->fresh[v - 1] = 0;

	for (int i = 0; i < n; i++)
	{
		if (g->fresh[i] == 1 && g->matrix[v - 1][i] == 1)
		{
			(*output)++;
			DFS(g, i + 1, n, output);
		}
	}
}

int main()
{
	int n, m, x, y, output = 0;
	Graph *g = (Graph *)malloc(sizeof(Graph));
	scanf("%d", &n);
	scanf("%d", &m);

	g->vertex = (int *)malloc(sizeof(int) * n);
	g->fresh = (int *)malloc(sizeof(int) * n);
	for (int i = 0; i < n; i++)
	{
		g->vertex[i] = i + 1;
		g->fresh[i] = 1;
	}

	g->matrix = (int **)malloc(sizeof(int *) * n);
	for (int i = 0; i < n; i++)
	{
		g->matrix[i] = (int *)malloc(sizeof(int) * n);
		for (int j = 0; j < n; j++)
			g->matrix[i][j] = 0;
	}

	for (int i = 0; i < m; i++)
	{
		scanf("%d %d", &x, &y);
		g->matrix[x - 1][y - 1] = 1;
		g->matrix[y - 1][x - 1] = 1;
	}

	DFS(g, 1, n, &output);
	printf("%d", output);

	return 0;
}