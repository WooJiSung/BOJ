#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>
#include <stdlib.h>

typedef struct node
{
	int data;
	struct node *left;
	struct node *right;
}Node;

Node *getNode(int data)
{
	Node *newNode = (Node *)malloc(sizeof(Node));
	newNode->data = data;
	newNode->left = NULL;
	newNode->right = NULL;

	return newNode;
}

void makeTree(Node *root, Node *node)
{
	if (root == node)
		return;

	if (root->data > node->data)
	{
		if (root->left == NULL)
			root->left = node;
		else
			makeTree(root->left, node);
	}

	if (root->data < node->data)
	{
		if (root->right == NULL)
			root->right = node;
		else
			makeTree(root->right, node);
	}
}

void postOrder(Node *root)
{
	if (root == NULL)
		return;

	if (root->left != NULL)		postOrder(root->left);
	if (root->right != NULL)	postOrder(root->right);
	printf("%d\n", root->data);
}

int main()
{
	Node **node = (Node **)malloc(sizeof(Node) * 10000);
	Node *root;
	int data, size = 1;

	scanf("%d", &data);
	node[0] = getNode(data);
	root = node[0];

	while (scanf("%d", &data) != -1)
	{
		node[size] = getNode(data);
		makeTree(root, node[size]);
		size++;
	}

	postOrder(root);

	for (int i = 0; i < size; i++)
		free(node[i]);
	free(node);

	return 0;
}